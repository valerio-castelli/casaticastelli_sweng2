Domain properties:
- User can only request rides using either the web application or the mobile application provided by the system.
- [OR] Users do not request rides using their personal acquaintance with taxi drivers.
- Taxi drivers will only make rides by accepting a request from the system.
- Contact information of taxi drivers are not disclosed by the city administration.
- All the data already stored in the system-as-is is actually transferred to the system-to-be when it is put into operation. [related req.: how can we transfer this data?]
- Users don't have the need to choose a particular taxi driver among those that are available for their ride.
- Users do not have to confirm the choice of the selected taxi.
- The city council has divided the city in taxi zones.
- The taxi service is operated 24h/day, unless exceptional circumstances occur. ***
- In case any exceptional circumstance occur for which the taxi service cannot be operated, the system is not required to satisfy incoming and reserved requests. 

*** exceptional circumstance: strikes, severe weather conditions, service suspension decided by the city council, particular holidays… [terminology]
- Every taxi driver is provided with a business mobile phone by the city council.
- Every taxi is uniquely identified by an alphanumeric code that is assigned by the city administration when he becomes part of the taxi service.




Assumptions:
- Users are not allowed to place reservations more than 15 days in advance. 
- The city council may decide to update the taxi zone division in the future. 
- The only taxis eligible for fulfilling a reservation are the ones that are present in the queue of the zone associated with the reservation source address 10 minutes before the scheduled meeting time.
- In order to receive ride requests, a taxi driver must explicitly mark himself as available.
- A taxi driver will not be able to receive ride requests while he’s unavailable.
- Taxis that are considered to be out-of-city will not be able to receive calls. (redundant?)
- A taxi driver who is currently on a ride will not be able to receive calls.
- A taxi driver must always notify the system when he terminates a ride. 
- A user is not required to be registered in order to request a ride.
- A user must be registered and logged in to the system in order to reserve a ride.
- After a taxi driver has been associated to a call, he must confirm or refuse the request within two minutes. After that period of time, the call is considered refused. 



( - qualunque meccanismo di prenotazione fosse in atto prima (ad es. telefonica), non verrà più usato )


- Traffic information and route data can be obtained from a third party mapping service.







- A user that has already requested a taxi will not request another one before having completed his ride.




Goal 1: The city administration must have the possibility to enter the data about the taxi drivers and about the taxi zones. 
Requirements:
- The system must provide a data entry form to collect data about the taxi drivers. In particular, the following information is required for each taxi driver: name, surname, mobile phone number, code/identifier, taxi driver license, taxi license plate.
- The system must provide a way to specify the taxi zone division of the city. 
- The system must provide a way for the operator to confirm that the initial data entry operation is complete. 
- The system will not allow any operation to take place until data entry is marked as completed. 

Goal 2: The city administration must have the possibility to update taxi driver data.
Requirements:
- The system should provide a way to update existing taxi driver data. 
- The system should provide a way to remove a taxi driver from the list.
- The system should provide a way to insert a new taxi driver. 

Goal 3: The city administration must have the possibility to update the taxi zone division.
Requirements:
- The system must provide a way to update the boundaries of an existing taxi zone. 
- The system must provide a way to insert a new taxi zone.
- The system must provide a way to remove an existing taxi zone.

Goal 4: The taxi driver must be able to communicate his availability status. 
Requirements:
- The mobile application should implement a toggle to allow drivers switch their availability status.
- A taxi driver that has marked himself as available should only be able to mark himself as unavailable. 
- A taxi driver that has marked himself as unavailable should only be able to mark himself as available. 
- A taxi driver should be able to mark himself as available only if it’s inside the city. 
- A taxi driver who is currently on a ride should not be able to mark himself as unavailable. 
- When a taxi driver marks himself as available, the mobile application should send his GPS coordinates to the central system.
- When a taxi driver marks himself as available, the system should use the retrieved GPS coordinates to compute the taxi zone to which the taxi belongs and move its code into the last position of the corresponding queue. 
- If the system successfully registers a taxi driver as available, it should send him a positive notification on the mobile application. Otherwise, it should send him a negative notification and ask him to retry later.
- When a taxi driver marks himself as unavailable, his taxi code should be moved into the unavailability list.
- When a taxi driver is moved to the unavailability list, he should receive a notification warning him that he’s no longer available to accept requests.


Goal 5: The allocation and distribution of taxis should be managed fairly and consistently.
Requirements:
- The system should consider all drivers to be initially (?) unavailable by default.
- The unavailability status of a taxi driver should not be affected by him leaving or entering the city.
- If a taxi driver changes zone while it has already marked himself as available, the system should move his code in the queue of the new zone. 
- If a taxi driver is set as available and exits the city, the system should put it into an “out-of-city” list.
- If a taxi driver considered to be out-of-city enters the city and the taxi driver was available before leaving the city and he has not marked himself as unavailable, the system should assign it to the queue of the zone in which he has entered.
- If a taxi driver considered to be out-of-city enters the city and the taxi driver has signaled himself as unavailable while he was out, the system should move the driver to the unavailability list.
- If a taxi driver leaves the city while he’s available, the system should prevent him from signaling he’s available until he is again in the perimeter of the city.
- The mobile application of each taxi driver should periodically send his GPS coordinates to the main system. 

- Each taxi zone must be internally associated with a queue containing the codes of the available taxis.
- The system must implement a list where to store codes of taxis who are not in service (“unavailability list”).
- The system must implement a list where to store codes of taxis who are currently on a ride (“currently riding list”).
- The system must implement a list where to store codes of taxis who are currently out of the city (“out-of-city list”).


Goal 6: The taxi driver should be able to receive, accept and refuse ride requests.
Requirements:
- The taxi driver that has been selected for a ride should receive a notification containing details on the meeting location and be allowed to accept or refuse the request.
- The system should provide an appropriate interface to let the driver accept or refuse the ride request.
- If a taxi driver accepts a request for a ride, the system should put it into a “currently riding” list.
- If a taxi driver refuses a request for a ride, his taxi code is moved to the last position of the queue of the zone he’s currently in.
- If the selected taxi driver does not answer within two minutes from the assignment, the system should consider the request refused. 

Goal 7: The taxi driver should be able to drop a request if the passenger doesn’t show up.
Requirements:
- If a passenger who has requested a ride doesn’t show up at the meeting location, the system should allow the taxi driver to drop the request. 
- In order for the “drop request” functionality to be enabled, the system should check that the taxi driver has effectively reached the meeting point.
- If a taxi driver uses the “drop request” functionality, the system should notify the passenger that his request has been dropped. 

Goal 8: The taxi driver should be able to communicate he has terminated a ride.
Requirements:
- A taxi driver who has terminated a ride should be able to notify the system that the ride has ended.
- A taxi driver should be able to notify that he’s terminated a ride only after the system has checked that the meeting point has actually been reached within a given level of precision. (?) 
- When the system receives the notification that a driver has terminated a ride and the driver is still outside the city, the system should move him to the outside-the-city list.
- When the system receives the notification that a driver has terminated a ride and the driver is inside the city, the system should assign him to the queue of the zone in which he is.

Goal 9: Users should be able to request rides. 
Requirements:
- The system should not allow for requests to have an origin outside the city. 
- The system should provide a way for users to request a ride.
	- The mobile application should be able to detect the current GPS location and use it as the source point of a ride request.
	- The mobile application should allow the user to enter an address as the source point of a ride request.
	- The web application should allow the user to enter an address as the source point of a ride request.
- When a user requests a ride, the system should use the source field of the request to compute the corresponding taxi zone. 
- After a request’s taxi zone has been computed, the system should assign the request to the first taxi in that zone’s queue.
- If a taxi driver accepts a request for a ride, the system should send a notification to the requesting user containing the code of the incoming taxi and an estimation of the waiting time (ETA).
- If the selected taxi driver refuses the request, the system should move his taxi code to the last position of the queue and forward the request to the following taxi in the queue.
- If the system is not able to find any available taxi in the queue of the specified zone, it should notify the passenger that the request could not be fulfilled. 

Goal 10: Users should be able to register.
Requirements:
- The system should provide a registration form. (including which data?)

Goal 11: Registered users should be able to reserve rides in advance.
Requirements:
- The system should keep an association between a user profile and his reservations.
- The system should provide a way for registered users to reserve a ride for a specific date and time.
	- The mobile application should allow the user to enter the source and destination addresses for the ride and the meeting time.
	- The web application should allow the user to enter the source and destination addresses for the ride and the meeting time.
- The system should provide a way for registered users to review their active reservations.
- The system should provide a way for registered users to delete a reservation.
- The system should store reservations in a reservation queue. 
- For every stored reservation, the system should proceed with selecting a taxi only 10 minutes before the scheduled meeting time.
- For every stored reservation, the system should only select taxis from the queue of the zone associated with the source address.
- The system should not allow a reservation to be scheduled if there aren’t at least two hours between the desired meeting time and the moment when the reservation request is submitted. 
- The system should not allow a reservation to be scheduled more than 15 days in advance.
- Reservations can’t be deleted after a taxi has already been associated to them.
- If no taxis are available to fulfill a reservation 10 minutes before the scheduled meeting time, the system should attempt to reschedule it at intervals of 5 minutes for at most 10 times.
- If a reservation can’t be fulfilled after 10 reschedules, the system should notify the passenger that his reservation will be dropped. 










