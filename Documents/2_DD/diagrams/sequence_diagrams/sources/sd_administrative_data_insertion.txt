@startuml

title sd_administrative_data_insertion

loop until confirmation or exit
	
	activate AdministrationWebApp
	AdministrationWebApp -> RemoteServicesInterface: sendSetupData(data)

	activate RemoteServicesInterface
	RemoteServicesInterface -> ZoneDivisionManagement: sendData(data)
	
	activate ZoneDivisionManagement
	ZoneDivisionManagement -> ZoneDivisionManagement: checkDataConsistency(data)
	
	activate ZoneDivisionManagement
	deactivate ZoneDivisionManagement
	ZoneDivisionManagement --> RemoteServicesInterface: result
		
	deactivate ZoneDivisionManagement
	alt correct zones data
		
		RemoteServicesInterface -> DriverManagement: sendData(data)
		
		activate DriverManagement
		DriverManagement -> DriverManagement: checkDataConsistency(data)
		
		activate DriverManagement
		deactivate DriverManagement
		RemoteServicesInterface <-- DriverManagement: result
		alt correct taxi drivers data
			
			
			deactivate DriverManagement
			RemoteServicesInterface --> AdministrationWebApp: dataConfirmed
			RemoteServicesInterface <- AdministrationWebApp: sendPassword(adminId, psw)
			RemoteServicesInterface -> APIPermissionsManagement: sendPassword(adminId, psw)
				
			activate APIPermissionsManagement
			APIPermissionsManagement -> APIPermissionsManagement: checkPassword(adminId, psw)
			
			activate APIPermissionsManagement
			deactivate APIPermissionsManagement
			APIPermissionsManagement --> RemoteServicesInterface: result
			
			deactivate APIPermissionsManagement
			alt password confirmed
				RemoteServicesInterface -> ZoneDivisionManagement: insertZones(data)
				
				activate ZoneDivisionManagement
				ZoneDivisionManagement -> DataAccessUtilities: insertZones(data)
				
				activate DataAccessUtilities
				DataAccessUtilities -> DBMS: insert(...)
				
				activate DBMS
				DataAccessUtilities <-- DBMS
				
				deactivate DBMS
				ZoneDivisionManagement <-- DataAccessUtilities
				
				deactivate DataAccessUtilities
				RemoteServicesInterface <-- ZoneDivisionManagement
				
				deactivate ZoneDivisionManagement
				RemoteServicesInterface -> DriverManagement: insertTaxiDrivers(data)
				
				activate DriverManagement
				DriverManagement -> DataAccessUtilities: insertTaxiDrivers(data)
				
				activate DataAccessUtilities
				DataAccessUtilities -> DBMS: insert(...)
				
				activate DBMS
				DataAccessUtilities <-- DBMS
				
				deactivate DBMS
				DriverManagement <-- DataAccessUtilities
				
				deactivate DataAccessUtilities
				RemoteServicesInterface <-- DriverManagement
				
				deactivate DriverManagement
				RemoteServicesInterface --> AdministrationWebApp: passwordConfirmedMessage
			else password rejected
				RemoteServicesInterface --> AdministrationWebApp: passwordRejectedMessage
			end
		else wrong taxi drivers data
			RemoteServicesInterface --> AdministrationWebApp: errorDescription
		end
	else wrong zones data
		RemoteServicesInterface --> AdministrationWebApp: errorDescription
	end
	
	deactivate RemoteServicesInterface
end

deactivate AdministrationWebApp
deactivate ZoneDivisionManagement

@enduml
