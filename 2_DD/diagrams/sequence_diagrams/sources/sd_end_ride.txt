@startuml

title sd_end_ride

activate TaxiDriverApp
TaxiDriverApp ->> RemoteServicesInterface: endRide(taxiDriverId, currentLocation)

activate RemoteServicesInterface
TaxiDriverApp <<-- RemoteServicesInterface
RemoteServicesInterface ->> TaxiManagement: endRide(taxiDriverId, currentLocation)

activate TaxiManagement
RemoteServicesInterface <<-- TaxiManagement

deactivate RemoteServicesInterface
TaxiManagement -> TaxiManagement: checkEndRideFunctionalityIsAllowed(taxiDriverId)
alt very wrong // comunicare all'utetne l'errore!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
else ok
	TaxiManagement -> LocationManagement: isLocationInsideCity(currentLocation)
	
	activate LocationManagement
	alt taxi driver inside city
		TaxiManagement <-- LocationManagement: true
		TaxiManagement -> TaxiManagement: setAvailable(taxiDriverId)
		TaxiManagement -> LocationManagement: getCurrentZone(currentLocation)
		TaxiManagement <-- LocationManagement: zone
		TaxiManagement -> TaxiManagement: dequeue(zone, taxiDriverId)
	else
		TaxiManagement <-- LocationManagement: false
		TaxiManagement -> TaxiManagement: setOutsideCity(taxiDriverId)
end

deactivate LocationManagement
TaxiManagement -> DataAccessUtilities: update(...)

activate DataAccessUtilities
DataAccessUtilities -> DBMS

activate DBMS
DataAccessUtilities <-- DBMS: update(...)

deactivate DBMS
TaxiManagement <-- DataAccessUtilities

deactivate DataAccessUtilities
TaxiManagement ->> NotificationSystem: confirm()

activate NotificationSystem
TaxiManagement <<-- NotificationSystem

deactivate TaxiManagement
NotificationSystem ->> TaxiDriverApp: confirm()
NotificationSystem <<-- TaxiDriverApp

deactivate NotificationSystem
end
@enduml