@startuml

title sd_end_ride

activate TaxiDriverApp
TaxiDriverApp -> RemoteServicesInterface: endRide(taxiDriverId, currentLocation)

activate RemoteServicesInterface
RemoteServicesInterface -> TaxiManagement: endRide(taxiDriverId, currentLocation)

activate TaxiManagement
TaxiManagement -> TaxiManagement: checkEndRideFunctionalityIsAllowed(taxiDriverId)
alt ok
	TaxiManagement -> LocationManagement: isLocationInsideCity(currentLocation)
	
	activate LocationManagement
	TaxiManagement <-- LocationManagement: result
	
	deactivate LocationManagement
	alt taxi driver inside city
		
		TaxiManagement -> TaxiManagement: setAvailable(taxiDriverId)
		TaxiManagement -> LocationManagement: getZone(currentLocation)
		
		activate LocationManagement
		TaxiManagement <-- LocationManagement: zone
		
		deactivate LocationManagement
		TaxiManagement -> TaxiManagement: dequeue(zone, taxiDriverId)
	else
		TaxiManagement -> TaxiManagement: setOutsideCity(taxiDriverId)
	end
	TaxiManagement -> DataAccessUtilities: update(...)

	activate DataAccessUtilities
	DataAccessUtilities -> DBMS: update(...)
	
	activate DBMS
	DataAccessUtilities <-- DBMS
	
	deactivate DBMS
	TaxiManagement <-- DataAccessUtilities
	
	deactivate DataAccessUtilities
	TaxiManagement --> RemoteServicesInterface: ok
	RemoteServicesInterface --> TaxiDriverApp: ok
else ko
	TaxiManagement --> RemoteServicesInterface: notAllowed
	RemoteServicesInterface --> TaxiDriverApp: notAllowed
end

deactivate TaxiManagement
deactivate RemoteServicesInterface
deactivate TaxiDriverApp

@enduml