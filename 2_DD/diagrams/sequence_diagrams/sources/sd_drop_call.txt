@startuml

title sd_drop_call

activate TaxiDriverApp
TaxiDriverApp ->> RemoteServicesInterface: dropRequest(taxiId)

activate RemoteServicesInterface
TaxiDriverApp <<-- RemoteServicesInterface
RemoteServicesInterface ->> RequestManagement: dropRequest(taxiId)

activate RequestManagement
RemoteServicesInterface <<-- RequestManagement

deactivate RemoteServicesInterface
RequestManagement -> RequestManagement: getRequestForTaxi(taxiId)
RequestManagement -> RequestManagement: getMeetingPointForRequest(request)
RequestManagement -> LocationManagement: checkTaxiDriverLocation(currentLocation, meetingPoint)

activate LocationManagement
LocationManagement --> RequestManagement: result

deactivate LocationManagement
alt taxi driver has reached the meeting location
	RequestManagement -> TaxiManagement: taxiDriverDroppedRequest(taxiId)
	
	activate TaxiManagement
	TaxiManagement -> LocationManagement: isLocationInsideCity(currentLocation)
	
	activate LocationManagement
	TaxiManagement <-- LocationManagement
	
	deactivate LocationManagement
	alt taxi driver inside 
		TaxiManagement -> TaxiManagement: setAvailable(taxiId)
		
		activate TaxiManagement
		deactivate TaxiManagement
		
		TaxiManagement -> LocationManagement: getZone(currentLocation)
	
		activate LocationManagement
		TaxiManagement <-- LocationManagement: zone
		
		deactivate LocationManagement
		TaxiManagement -> TaxiManagement: enqueue(zone, taxiId)
		
		activate TaxiManagement
		deactivate TaxiManagement
	else taxi driver outside city
		TaxiManagement -> TaxiManagement: setOutsideCity(taxiId)
		
		activate TaxiManagement
		deactivate TaxiManagement
	end
	RequestManagement <-- TaxiManagement
	RequestManagement -> DataAccessUtilities: update(...)
	
	activate DataAccessUtilities
	DataAccessUtilities -> DBMS: update(...)
	
	activate DBMS
	DataAccessUtilities <-- DBMS
	
	deactivate DBMS
	RequestManagement <-- DataAccessUtilities
	
	deactivate DataAccessUtilities
	RequestManagement ->> NotificationSystem: callDropped()
	
	activate NotificationSystem
	RequestManagement <<-- NotificationSystem
	NotificationSystem ->> PassangerApp: callDropped()
	
	activate PassangerApp
	NotificationSystem <<-- PassangerApp
	
	deactivate PassangerApp
	NotificationSystem ->> TaxiDriverApp: callDropped()
	NotificationSystem <<-- TaxiDriverApp
else
	RequestManagement ->> NotificationSystem: dropRejected()
	RequestManagement <<-- NotificationSystem
	NotificationSystem ->> TaxiDriverApp: dropRejected()
	NotificationSystem <<-- TaxiDriverApp
end

deactivate NotificationSystem
deactivate TaxiDriverApp
deactivate RequestManagement
deactivate TaxiManagement

@enduml